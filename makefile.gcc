# 工具链
CROSS_PREFIX ?= aarch64-none-elf-
CC := $(CROSS_PREFIX)gcc
AR := $(CROSS_PREFIX)ar

# 头文件路径
INCLUDES = \
    -I. \
    -Icommon \
    -Icore \
    -Icompat \
    -Ifreebsd/lib \
    -Ifreebsd/sys \
    -Ifreebsd/sys/contrib/libfdt \
    -Ifreebsd/sys/contrib/dev/acpica/include \
    -Ifreebsd/sys/contrib/dev/acpica/include/platform \
    -Ifreebsd/sys/contrib/dev/acpica/compiler \
    -Ifreebsd/usr.sbin/acpi/acpidump \
    -Ifreebsd/usr.sbin/ofwdump

# 宏定义
CFLAGS := -D__RTBSD_LIBBSD__ -std=gnu99 -ffunction-sections -fdata-sections -Wall -Wno-unused-function $(INCLUDES)

# 可选功能
FDT ?= 0
ACPI ?= 0
ifeq ($(FDT),1)
    CFLAGS += -DFDT=1
endif
ifeq ($(ACPI),1)
    CFLAGS += -DDEV_ACPI=1
endif

# 基础源文件
SRCS = \
    core/bsd_core.c \
    osal/bsd_osal_threadx.c \
    compat/freebsd/local/bus_if.c \
    compat/freebsd/local/device_if.c \
    freebsd/sys/kern/subr_kobj.c \
    freebsd/sys/kern/kern_module.c \
    freebsd/sys/kern/subr_bus.c \
    freebsd/sys/kern/kern_linker.c \
    freebsd/sys/kern/subr_rman.c \
    freebsd/sys/kern/subr_sbuf.c \
    freebsd/sys/arm64/arm64/autoconf.c \
    freebsd/sys/arm64/arm64/nexus.c

ifeq ($(FDT),1)
SRCS += \
    compat/freebsd/local/ofw_if.c \
    compat/freebsd/local/ofw_bus_if.c \
    freebsd/sys/dev/ofw/ofw_bus_subr.c \
    freebsd/sys/dev/ofw/ofw_fdt.c \
    freebsd/sys/dev/ofw/ofw_pcib.c \
    freebsd/sys/dev/ofw/ofw_subr.c \
    freebsd/sys/dev/ofw/ofwbus.c \
    freebsd/sys/dev/ofw/openfirm.c \
    freebsd/sys/dev/fdt/fdt_common.c \
    freebsd/sys/dev/fdt/simplebus.c \
    freebsd/usr.sbin/ofwdump/ofwdump.c \
    freebsd/usr.sbin/ofwdump/ofw_util.c \
    freebsd/sys/contrib/libfdt/fdt_addresses.c \
    freebsd/sys/contrib/libfdt/fdt_empty_tree.c \
    freebsd/sys/contrib/libfdt/fdt_overlay.c \
    freebsd/sys/contrib/libfdt/fdt_ro.c \
    freebsd/sys/contrib/libfdt/fdt_rw.c \
    freebsd/sys/contrib/libfdt/fdt_strerror.c \
    freebsd/sys/contrib/libfdt/fdt_sw.c \
    freebsd/sys/contrib/libfdt/fdt_wip.c \
    freebsd/sys/contrib/libfdt/fdt.c
endif

ifeq ($(ACPI),1)
SRCS += \
    compat/freebsd/local/acpi_bus_if.c \
    compat/freebsd/local/acpi_if.c \
    freebsd/lib/libnetbsd/sys/kern/subr_autoconf.c \
    freebsd/lib/libnetbsd/sys/kern/subr_device.c \
    freebsd/lib/libnetbsd/sys/lib/libkern/pmatch.c \
    freebsd/lib/libnetbsd/sys/lib/libkern/strlist.c \
    freebsd/lib/libnetbsd/netbsd.c \
    freebsd/sys/arm64/acpica/OsdEnvironment.c \
    freebsd/sys/dev/acpica/Osd/OsdDebug.c \
    freebsd/sys/dev/acpica/Osd/OsdHardware.c \
    freebsd/sys/dev/acpica/Osd/OsdInterrupt.c \
    freebsd/sys/dev/acpica/Osd/OsdMemory.c \
    freebsd/sys/dev/acpica/Osd/OsdSchedule.c \
    freebsd/sys/dev/acpica/Osd/OsdStream.c \
    freebsd/sys/dev/acpica/Osd/OsdSynch.c \
    freebsd/sys/dev/acpica/Osd/OsdTable.c \
    freebsd/lib/libnetbsd/sys/arm/fdt/acpi_fdt.c \
    freebsd/lib/libnetbsd/sys/arm/acpi/cpu_acpi.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_util.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_resource.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_pcd.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_pcc.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_cppc.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_tz.c \
    freebsd/lib/libnetbsd/sys/dev/acpi/acpi_power.c \
    freebsd/sys/arm64/acpica/acpi_machdep.c \
    freebsd/sys/dev/acpica/acpi_package.c \
    freebsd/sys/dev/acpica/acpi_resource.c \
    freebsd/sys/dev/acpica/acpi.c \
    freebsd/usr.sbin/acpi/acpidump/acpi.c \
    freebsd/usr.sbin/acpi/acpidump/acpidump.c

# ACPICA 组件
ACPICA_DIR = freebsd/sys/contrib/dev/acpica/components
SRCS += $(wildcard $(ACPICA_DIR)/dispatcher/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/events/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/executer/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/hardware/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/namespace/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/parser/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/resources/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/tables/*.c)
SRCS += $(wildcard $(ACPICA_DIR)/utilities/*.c)
endif

OBJS := $(SRCS:.c=.o)

.PHONY: all clean

all: libbsd.a

libbsd.a: $(OBJS)
	$(AR) rcs $@ $^

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -f $(OBJS) libbsd.a